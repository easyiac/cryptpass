---
- name: Deploy Cryptpass
  hosts: all:!localhost
  become: true
  gather_facts: true
  tags: always
  vars:
      cryptpass_dir: "/app/cryptpass"
      cryptpass_data_dir: "{{ cryptpass_dir }}/data"
      cryptpass_log_dir: "{{ cryptpass_dir }}/logs"
      cryptpass_port: "{{ cryptpass_config['server']['port'] | int }}"
  # roles:
  #     - role: geerlingguy.docker # install the role from tasks after installing python3 and procps
  tasks:
      - name: Get cargo metadata
        become: false
        ansible.builtin.command:
            argv:
                - cargo
                - metadata
                - --format-version=1
                - --no-deps
        register: cargo_metadata
        changed_when: false
        delegate_to: localhost

      - name: Set cryptpass version
        ansible.builtin.set_fact:
            cryptpass_version: "{{ cargo_metadata_json['packages'][0].version }}"
        vars:
            cargo_metadata_json: "{{ cargo_metadata.stdout | from_json }}"

      - name: Install python3 and procps
        ansible.builtin.raw: DEBIAN_FRONTEND=noninteractive apt-get update
            && DEBIAN_FRONTEND=noninteractive apt-get install -y python3 procps
        register: cs_patch_install_python_pip_result_raw
        changed_when: "'0 upgraded, 0 newly installed' not in
            cs_patch_install_python_pip_result_raw.stdout"

      - name: Install packages
        ansible.builtin.apt:
            name: python3-docker
            state: present

      - name: Install docker
        ansible.builtin.import_role:
            name: geerlingguy.docker

      - name: Creating directories
        ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: "0755"
        loop:
            - "{{ cryptpass_data_dir }}"
            - "{{ cryptpass_log_dir }}"

      - name: Allow ufw
        community.general.ufw:
            rule: allow
            port: "{{ cryptpass_port }}"
            proto: tcp
            state: enabled

      - name: Run docker
        community.docker.docker_container:
            name: cryptpass
            image: docker.io/easyiac/cryptpass:{{ cryptpass_version }}
            pull: always
            state: started
            recreate: true
            restart_policy: unless-stopped
            working_dir: "{{ cryptpass_data_dir }}"
            env:
                TZ: Asia/Kolkata
                CRYPTPASS_LOG_DIR: "{{ cryptpass_log_dir }}"
                CRYPTPASS_CONFIG: "{{ cryptpass_config | to_json }}"
                CRYPTPASS_LOG_LEVEL: INFO
            ports:
                - "{{ cryptpass_port }}:{{ cryptpass_port }}"
            volumes:
                - "{{ cryptpass_data_dir }}:{{ cryptpass_data_dir }}"
                - "{{ cryptpass_log_dir }}:{{ cryptpass_log_dir }}"
                - "{{ cryptpass_dir }}/cryptpass:/cryptpass:ro"
                - /etc/localtime:/etc/localtime:ro
